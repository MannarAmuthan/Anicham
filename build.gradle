plugins {
    id 'java-library'
    id 'jacoco'
}

group 'org.anicham'
version '1.0.0'

sourceSets {
    main.java.srcDirs  = ['src/antlr4', 'src/main']
}

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnit()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: "grammar/**")
        }))
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestCoverageVerification {
    violationRules {
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: "grammar/**")
            }))
        }
        rule {
            limit {
                minimum = 0.9
            }
        }
    }
}

task generateParser(type:JavaExec) {
    main = 'org.antlr.v4.Tool'
    classpath = sourceSets.main.compileClasspath
    args = ['-Dlanguage=Java', 'grammar/Tamizh.g4','-visitor', '-o', 'src/antlr4']
}

task generateVenbaParser(type:JavaExec) {
    main = 'org.antlr.v4.Tool'
    classpath = sourceSets.main.compileClasspath
    args = ['-Dlanguage=Java', 'grammar/Yaappu/Venba.g4','-visitor', '-o', 'src/antlr4']
}

dependencies {
    implementation'org.antlr:antlr4:4.5.2'

    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}
